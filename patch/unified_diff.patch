commit 09c1a9ccc219ebae2fd72d92821dee020b78becd
Author: CODeRUS <coderusinbox@gmail.com>
Date:   Tue Dec 16 04:24:53 2014 +0500

    Remastered folder icons

diff --git a/usr/share/lipstick-jolla-home-qt5/launcher/FolderIcon.qml b/launcher/FolderIcon.qml
new file mode 100644
index 0000000..fe7f92f
--- /dev/null
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/FolderIcon.qml
@@ -0,0 +1,71 @@
+import QtQuick 2.0
+import Sailfish.Silica 1.0
+
+Rectangle {
+    property variant icons: []
+    property bool pressed
+
+    width: Theme.iconSizeLauncher
+    height: Theme.iconSizeLauncher
+    border.color: Theme.rgba(Theme.primaryColor, pressed ? 0.5 : 0.1)
+    border.width: 2
+    radius: Theme.paddingSmall
+    color: "transparent"
+
+    layer.effect: pressEffectComponent
+    layer.enabled: pressed
+
+    Flow {
+        id: folderIcons
+        anchors {
+            fill: parent
+            margins: Theme.paddingSmall
+        }
+        spacing: 0
+        Repeater {
+            model: icons
+            delegate: Image {
+                width: folderIcons.width / 2
+                height: folderIcons.width / 2
+
+                horizontalAlignment: Image.AlignHCenter
+                verticalAlignment: Image.AlignVCenter
+                fillMode: Image.Pad
+
+                sourceSize.width: width - Theme.paddingSmall / 2
+                sourceSize.height: height - Theme.paddingSmall / 2
+
+                smooth: true
+
+                source: {
+                    if (modelData.indexOf(':/') !== -1) {
+                        return modelData
+                    } else if (modelData.indexOf('/') === 0) {
+                        return 'file://' + modelData
+                    } else {
+                        return 'image://theme/' + modelData
+                    }
+                }
+            }
+        }
+    }
+
+    Component {
+        id: pressEffectComponent
+        ShaderEffect {
+            property variant source
+            property color color: Theme.rgba(Theme.highlightBackgroundColor, 0.4)
+            fragmentShader: "
+            uniform sampler2D source;
+            uniform highp vec4 color;
+            uniform lowp float qt_Opacity;
+            varying highp vec2 qt_TexCoord0;
+            void main(void)
+            {
+                highp vec4 pixelColor = texture2D(source, qt_TexCoord0);
+                gl_FragColor = vec4(mix(pixelColor.rgb/max(pixelColor.a, 0.00390625), color.rgb/max(color.a, 0.00390625), color.a) * pixelColor.a, pixelColor.a) * qt_Opacity;
+            }
+            "
+        }
+    }
+}
diff --git a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
index 608cafa..75a2c15 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
@@ -28,6 +28,14 @@ Rectangle {
         destroy(450)
     }
 
+    function iconFolderItems(folder) {
+        var icons = []
+        for (var i = 0; i < folder.itemCount && i < 4; i++) {
+            icons.splice(icons.length, 0, folder.get(i).iconId)
+        }
+        return icons
+    }
+
     Binding on opacity {
         when: folderSwipeActive
         value: 1.0 - folderSwipeProgress
@@ -113,17 +121,32 @@ Rectangle {
                 id: icon
                 width: launcherGrid.cellWidth
                 height: parent.height
-                LauncherIcon {
+                Loader {
                     y: (launcherGrid.cellHeight - height - Theme.fontSizeExtraSmall)/2
-                    icon: model.iconId
                     anchors.horizontalCenter: parent.horizontalCenter
-                    pressed: icon.pressed && icon.containsMouse
-                    Text {
-                        font.pixelSize: Theme.fontSizeExtraLarge
-                        font.family: Theme.fontFamilyHeading
-                        color: Theme.primaryColor
-                        text: model.itemCount
-                        anchors.centerIn: parent
+                    sourceComponent: model.iconId == "icon-launcher-folder-00" ? headerFolderIconComponent : headerLauncherIconComponent
+                    active: true
+                }
+
+                Component {
+                    id: headerLauncherIconComponent
+                    LauncherIcon {
+                        icon: model.iconId
+                        pressed: icon.pressed && icon.containsMouse
+                        Text {
+                            font.pixelSize: Theme.fontSizeExtraLarge
+                            font.family: Theme.fontFamilyHeading
+                            color: Theme.primaryColor
+                            text: model.itemCount
+                            anchors.centerIn: parent
+                        }
+                    }
+                }
+                Component {
+                    id: headerFolderIconComponent
+                    FolderIcon {
+                        icons: iconFolderItems(model)
+                        pressed: folderIcon.pressed && folderIcon.containsMouse
                     }
                 }
                 onClicked: {
@@ -241,7 +264,7 @@ Rectangle {
 
                 y: Theme.fontSizeExtraSmall/2
                 width: parent.width
-                height: cellHeight * visibleRowCount
+                height: selectIcon ? Screen.height : cellHeight * visibleRowCount
                 cacheBuffer: height
                 displayMarginBeginning: Theme.fontSizeExtraSmall/2
                 displayMarginEnd: Theme.fontSizeExtraSmall/2
@@ -301,27 +324,42 @@ Rectangle {
             Behavior on opacity { FadeAnimation {} }
             enabled: selectIcon
             Repeater {
-                model: 16
+                model: 17
                 delegate: MouseArea {
                     id: folderIcon
                     width: launcherGrid.cellWidth
                     height: launcherGrid.cellHeight
-                    LauncherIcon {
+                    Loader {
                         id: folderLauncherIcon
                         anchors {
                             centerIn: parent
                             verticalCenterOffset: Math.round(-Theme.fontSizeExtraSmall/2)
                         }
-                        icon: "image://theme/icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
-                        pressed: folderIcon.pressed && folderIcon.containsMouse
-                        opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
+                        sourceComponent: index == 0  ? folderIconComponent : launcherIconComponent
+                        active: true
+                    }
+                    Component {
+                        id: launcherIconComponent
+                        LauncherIcon {
+                            icon: "image://theme/icon-launcher-folder-" + (index >= 10 ? index : "0" + index)
+                            pressed: folderIcon.pressed && folderIcon.containsMouse
+                            opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
+                        }
+                    }
+                    Component {
+                        id: folderIconComponent
+                        FolderIcon {
+                            icons: iconFolderItems(launcherFolder.model)
+                            pressed: folderIcon.pressed && folderIcon.containsMouse
+                            opacity: launcherGrid.model.iconId == "icon-launcher-folder-00" ? 0.3 : 1.0
+                        }
                     }
                     Image {
                         anchors.centerIn: folderLauncherIcon
                         source: folderLauncherIcon.opacity !== 1.0 ? "image://theme/icon-s-installed" : ""
                     }
                     onClicked: {
-                        launcherGrid.model.iconId = "icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
+                        launcherGrid.model.iconId = "icon-launcher-folder-" + (index >= 10 ? index : "0" + index)
                         selectIcon = false
                     }
                 }
diff --git a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
index 14b8538..57cf75f 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
@@ -86,6 +86,14 @@ SilicaGridView {
         desktop.removeApplicationEnabled = enabled
     }
 
+    function iconFolderItems(folder) {
+        var icons = []
+        for (var i = 0; i < folder.itemCount && i < 4; i++) {
+            icons.splice(icons.length, 0, folder.get(i).iconId)
+        }
+        return icons
+    }
+
     Image {
         id: newFolderIcon
         property bool active
@@ -436,23 +444,39 @@ SilicaGridView {
                 NumberAnimation { target: launcherItem; property: "opacity"; to: 1.0; duration: 75 }
             }
 
-            LauncherIcon {
+            Loader {
                 id: launcherIcon
                 anchors {
                     centerIn: parent
                     verticalCenterOffset: rootFolder && index <= 3  ? 0 : Math.round(-launcherText.height/2)
                 }
-                icon: model.object.iconId
-                pressed: down
-                opacity: isUpdating && folderItemCount == 0 ? 0.2 : 1.0
-                Text {
-                    font.pixelSize: Theme.fontSizeExtraLarge
-                    font.family: Theme.fontFamilyHeading
-                    text: folderItemCount > 0 ? folderItemCount : ""
-                    color: Theme.primaryColor
-                    anchors.centerIn: parent
-                    visible: !isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100
-                    opacity: reorderItem && folderItemCount >= 99 ? 0.3 : 1.0
+                sourceComponent: model.object.iconId === "icon-launcher-folder-00" ? folderIconComponent : launcherIconComponent
+                active: true
+            }
+
+            Component {
+                id: launcherIconComponent
+                LauncherIcon {
+                    icon: model.object.iconId
+                    pressed: down
+                    opacity: isUpdating && folderItemCount == 0 ? 0.2 : 1.0
+                    Text {
+                        font.pixelSize: Theme.fontSizeExtraLarge
+                        font.family: Theme.fontFamilyHeading
+                        text: folderItemCount > 0 ? folderItemCount : ""
+                        color: Theme.primaryColor
+                        anchors.centerIn: parent
+                        visible: !isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100
+                        opacity: reorderItem && folderItemCount >= 99 ? 0.3 : 1.0
+                    }
+                }
+            }
+
+            Component {
+                id: folderIconComponent
+                FolderIcon {
+                    icons: iconFolderItems(model.object)
+                    pressed: down
                 }
             }
 
